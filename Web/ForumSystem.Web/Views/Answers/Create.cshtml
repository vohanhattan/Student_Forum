@model ForumSystem.Web.InputModels.Answers.AnswerInputModel

@{
    ViewBag.Title = "Create new answer";
}

@using (Ajax.BeginForm("Create", "Answers", new { id = Model.PostId }, new AjaxOptions { HttpMethod = "POST", InsertionMode = InsertionMode.InsertAfter, UpdateTargetId = "answers", OnFailure = "showAnswerRequiredError", OnSuccess = "closeForm" }, null))
{
    @Html.AntiForgeryToken()

    @Html.HiddenFor(model => model.PostId)
    @Html.ValidationSummary(true, string.Empty, new { @class = "text-danger" })
    <div class="row">
        <div class="col-md-12">
            @Html.EditorFor(model => model.Content, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Content, string.Empty, new { @class = "text-danger" })
            <div id="field-validation-error-message"></div>
        </div>
    </div>
    <div class="row top-buffer bottom-buffer post-actions-toolbar">
        <div class="col-md-12">
            <input type="submit" value="Create" class="btn btn-success pull-left left-buffer" />
            <input type="button" value="Cancel" class="btn btn-primary pull-right right-buffer" onclick="closeForm()" />
        </div>
    </div>
}


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
