@model ForumSystem.Web.InputModels.Comments.CommentInputModel

@using (Ajax.BeginForm("Create", "Comments", new { id = Model.AnswerId }, new AjaxOptions()
{
    HttpMethod = "POST",
    InsertionMode = InsertionMode.InsertAfter,
    UpdateTargetId = $"comments-{Model.AnswerId}",
    OnFailure = "showCommentRequiredError",
    OnSuccess = "closeCommentForm"
}))
{
    @Html.AntiForgeryToken()

    @Html.HiddenFor(model => model.AnswerId)
    @Html.ValidationSummary(true, string.Empty, new { @class = "text-danger" })

    <div class="row">
        <div class="col-md-12">
            @Html.EditorFor(model => model.Content, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Content, string.Empty, new { @class = "text-danger" })
            <div id="answer-field-validation-error-message"></div>
        </div>
    </div>
    <div class="row top-buffer bottom-buffer post-actions-toolbar">
        <div class="col-md-12">
            <input type="submit" value="Comment" class="btn btn-success pull-left left-buffer"/>
            <input type="button" value="Cancel" class="btn btn-primary pull-right right-buffer" onclick="closeCommentForm()"/>
        </div>
    </div>
}

<script>
    function closeCommentForm() {
        $("#answer-action-container-@Model.AnswerId").empty();
    }

    function showCommentRequiredError(data) {
        $('<div class="top-buffer left-buffer field-validation-error">'
                + data.responseJSON.errorMessage
                + '</div>').prependTo('#answer-field-validation-error-message')
            .delay(3000).fadeOut();
    }
</script>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}